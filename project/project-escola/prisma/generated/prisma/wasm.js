
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AlunoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email'
};

exports.Prisma.ProfessorScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email'
};

exports.Prisma.AulaScalarFieldEnum = {
  id: 'id',
  tema: 'tema',
  duracao: 'duracao',
  professorId: 'professorId',
  cursoId: 'cursoId'
};

exports.Prisma.CursoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.AlunoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email'
};

exports.Prisma.ProfessorOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email'
};

exports.Prisma.AulaOrderByRelevanceFieldEnum = {
  id: 'id',
  tema: 'tema',
  professorId: 'professorId',
  cursoId: 'cursoId'
};

exports.Prisma.CursoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome'
};


exports.Prisma.ModelName = {
  Aluno: 'Aluno',
  Professor: 'Professor',
  Aula: 'Aula',
  Curso: 'Curso'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\USER\\Documents\\projectos\\aulas\\node\\node-prisma\\project-escola\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\USER\\Documents\\projectos\\aulas\\node\\node-prisma\\project-escola\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma\" // Corrige para o caminho dentro de project-escola\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Aluno {\n  id    String  @id @default(cuid())\n  nome  String  @db.VarChar(100)\n  email String  @unique @db.VarChar(100)\n  curso Curso[]\n  aula  Aula[]\n\n  @@map(\"aluno\")\n}\n\nmodel Professor {\n  id    String @id @default(cuid())\n  nome  String @db.VarChar(100)\n  email String @unique @db.VarChar(100)\n  aula  Aula[]\n\n  @@map(\"professor\")\n}\n\nmodel Aula {\n  id          String    @id @default(cuid())\n  tema        String    @db.VarChar(100)\n  duracao     Int\n  professorId String    @map(\"professor_id\")\n  professor   Professor @relation(fields: [professorId], references: [id])\n  cursoId     String    @map(\"curso_id\")\n  curso       Curso     @relation(fields: [cursoId], references: [id])\n  aluno       Aluno[]\n\n  @@map(\"aula\")\n}\n\nmodel Curso {\n  id    String  @id @default(cuid())\n  nome  String  @db.VarChar(100)\n  aula  Aula[]\n  aluno Aluno[]\n\n  @@map(\"curso\")\n}\n",
  "inlineSchemaHash": "98a69c968132f5c8b1a0873997c43b86c468d6cdf92ff91a18c2b37f0a0c108e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Aluno\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"curso\",\"kind\":\"object\",\"type\":\"Curso\",\"relationName\":\"AlunoToCurso\"},{\"name\":\"aula\",\"kind\":\"object\",\"type\":\"Aula\",\"relationName\":\"AlunoToAula\"}],\"dbName\":\"aluno\"},\"Professor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aula\",\"kind\":\"object\",\"type\":\"Aula\",\"relationName\":\"AulaToProfessor\"}],\"dbName\":\"professor\"},\"Aula\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tema\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duracao\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"professorId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"professor_id\"},{\"name\":\"professor\",\"kind\":\"object\",\"type\":\"Professor\",\"relationName\":\"AulaToProfessor\"},{\"name\":\"cursoId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"curso_id\"},{\"name\":\"curso\",\"kind\":\"object\",\"type\":\"Curso\",\"relationName\":\"AulaToCurso\"},{\"name\":\"aluno\",\"kind\":\"object\",\"type\":\"Aluno\",\"relationName\":\"AlunoToAula\"}],\"dbName\":\"aula\"},\"Curso\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aula\",\"kind\":\"object\",\"type\":\"Aula\",\"relationName\":\"AulaToCurso\"},{\"name\":\"aluno\",\"kind\":\"object\",\"type\":\"Aluno\",\"relationName\":\"AlunoToCurso\"}],\"dbName\":\"curso\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

